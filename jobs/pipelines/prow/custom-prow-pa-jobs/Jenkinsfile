@Library('jenkins-upstream-library') _

pipeline {
    agent {
        docker {
            image 'quay.io/powercloud/inbound-agent:4.10-3.3'
            args '-v /etc/resolv.conf:/etc/resolv.conf'
            label 'jump-vpc-x86_64'
        }
    }
    parameters {
        string(defaultValue: '26', description: '''
        Enter the following CI numbers separated by commas to query (e.g., 14,15,16)
        1  4.12 ecosystem
        2  4.13 ecosystem
        3  4.14 ecosystem
        4  4.15 ecosystem
        5  4.16 ecosystem
        6  4.12 jenkins
        7  4.13 jenkins
        8  4.14 jenkins
        9  4.15 jenkins
        10  4.16 jenkins
        11  4.12 fips
        12  4.13 fips
        13  4.14 fips
        14  4.15 fips
        15  4.16 fips
        16  4.12 serial
        17  4.13 serial
        18  4.14 serial
        19  4.15 serial
        20  4.16 serial
        21  4.12 compact
        22  4.13 compact
        23  4.14 compact
        24  4.15 compact
        25  4.16 compact
        26  All        
        ''' , name: 'SelectedCI')
        string(defaultValue: '2024-1-1', description: 'Enter the from date from where you want to get the details as yyyy-mm-dd format (e.g., 2023-12-13 )', name: 'StartDate')
        string(defaultValue: '2024-1-2', description: 'Enter the last date till where you want to get the details as yyyy-mm-dd format (e.g., 2023-12-16 )', name: 'EndDate')
        choice(description: '''
        Select the query option from the following
        1. Check Node Crash
        2. Brief Job information
        3. Detailed Job information
        4. Failed testcases
        5. Get builds with testcase failure
        6. Get testcase failure frequency
        ''', choices: ['3','1','2', '4', '5', '6'], name: 'QueryOption')
        string(defaultValue: '', description: 'Enter the Testcase name (e.g., [sig-node] static pods should start after being created )', name: 'TestcaseName')
    }
    // environment {
    //     //Parameters
    //     SELECTED_CI = "${params.SelectedCI}"
    //     BEFORE_DATE = "${params.EndDate}"
    //     AFTER_DATE = "${params.StartDate}"
    //     QUERY_OPTION = "${params.QueryOption}"
    //  }
    stages {
        stage('Run Daily Build Update Script'){
            steps{
                script {
                    try {
                        sh '''
                            #!/bin/bash
                            if command -v python3 &>/dev/null; then
                                echo "Python3 installed"
                            else
                                sudo apt-get install -y python3
                            fi
                            
                            if command -v pip &>/dev/null; then
                                echo "pip installed"
                            else
                                sudo apt-get install -y python3-pip
                                 
                            fi
                            sudo pip install virtualenv
                            echo "Clone ci monitoring repo"
                            git clone https://github.com/ocp-power-automation/ci-monitoring-automation.git
                            
                            echo "Activate virtualenv"
                            cd ci-monitoring-automation
                            virtualenv venv
                            . ./venv/bin/activate
                            
                            pip install -r requirements.txt
                            
                            echo "Executing daily build update script"
                            cat config.ini
                            echo "========================="

                            sed -i "s/False/True/g" config.ini
                            sed -i "s/__CI__/$SelectedCI/g" config.ini 
                            sed -i "s/__BDATE__/${EndDate}/g" config.ini 
                            sed -i "s/__ADATE__/${StartDate}/g" config.ini 
                            sed -i "s/__QP__/${QueryOption}/g" config.ini
                            sed -i "s/__TC__/${TestcaseName}/g" config.ini
                            cat config.ini
                            echo "========================="
                            python3 CI_JobHistory.py --job_type pa > output.txt
                            cat ./output.txt
                        '''
                    }
                    catch (err){
                            echo 'Error ! Failed while running CI_DailyBuildUpdates script'
                            env.FAILED_STAGE=env.STAGE_NAME
                            throw err
                    }
                }
           }
        }

    }
    
    post {
        always {
            archiveAllArtifacts("ci-monitoring-automation/output.txt")
            cleanWs()
        }
    }

}
